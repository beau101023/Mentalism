Utility emphasis

TODO: Rewrite the spell system to dispatch all effects from the client instead of having the client
 trigger a dispatch from the server.
 This means
 1. Focus will be handled on the client
 2. The spell manager will be on the client
 3. The Progression State will still be on the server for persistence
 4. Lingering effects will be handled on the client, and the lingering effect manager will be client-side
 5. When a spell is cast, the spell's ID number will be sent to the server.
     The server will then perform all server-side logic.
 The goal of this is to avoid server-client communication as much as possible to reduce complexity


- Implement distraction resistances
- Moar spells
- add biden blast sound effect

x Make 'focus bar' of some kind
x Implement unlock system
x Make seeing while casting unlockable
x Implement hasModifier on Focus to check for duplicate modifier applications
x Use lerp instead of the nonstandard stuff I'm using currently

Spell ideas:
Air walk
Block break distance
Transmutation

Progression systems:
Distraction resistance types
Spells unlock when you focus up to a certain level while performing a certain action
Focuslevel increases

Early progression is only touch spells (within interaction range)
Higher focus level eventually makes it so the player can keep their eyes open while focusing
Mid-progression gives projectiles
high progression gives you some shit idk, something cool